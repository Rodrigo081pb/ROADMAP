name: CI/CD Python Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Faz checkout do código
      - name: Checkout do código
        uses: actions/checkout@v3

      # 2️⃣ Configura a versão do Python
      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      # 3️⃣ Instala dependências do projeto
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4️⃣ Verifica se o código segue boas práticas (linting com flake8)
      - name: Verificar formatação do código
        run: |
          pip install flake8 black
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check .

      # 5️⃣ Roda testes automatizados com pytest
      - name: Rodar testes automatizados
        run: |
          pip install pytest
          pytest

      # # 6️⃣ (Opcional) Faz build do projeto
      # - name: Construir pacote Python
      #   run: python setup.py sdist

      # # 7️⃣ (Opcional) Publica o build no PyPI (caso seja um pacote)
      # - name: Publicar no PyPI
      #   if: github.event_name == 'push'
      #   env:
      #     PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      #   run: |
      #     pip install twine
      #     twine upload dist/* -u __token__ -p $PYPI_API_TOKEN
